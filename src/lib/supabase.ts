// Supabase client configuration for Chef İlhamə
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!

// Client for frontend (uses anon key)
export const supabase = createClient(supabaseUrl, supabaseAnonKey)

// Admin client for backend operations (uses service role key)
export const supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

// Database types (will be generated by Supabase CLI)
export type Database = {
  public: {
    Tables: {
      recipes: {
        Row: {
          id: string
          name: string
          slug: string
          origin: string
          category: string
          prep_time: string
          difficulty: 'Asan' | 'Orta' | 'Cetin'
          servings: string
          history: string
          serving_suggestions: string
          image: string
          featured: boolean
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          name: string
          slug: string
          origin: string
          category: string
          prep_time: string
          difficulty: 'Asan' | 'Orta' | 'Cetin'
          servings: string
          history: string
          serving_suggestions: string
          image: string
          featured?: boolean
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          name?: string
          slug?: string
          origin?: string
          category?: string
          prep_time?: string
          difficulty?: 'Asan' | 'Orta' | 'Cetin'
          servings?: string
          history?: string
          serving_suggestions?: string
          image?: string
          featured?: boolean
          created_at?: string
          updated_at?: string
        }
      }
      // Add other table types as needed
    }
  }
}