
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RecipeScalarFieldEnum = {
  id: 'id',
  yemeyinAdi: 'yemeyinAdi',
  slug: 'slug',
  mense: 'mense',
  bolge: 'bolge',
  kateqoriya: 'kateqoriya',
  terkibHisseleri: 'terkibHisseleri',
  hazirlanmaQaydasi: 'hazirlanmaQaydasi',
  hazirlanmaMuddeti: 'hazirlanmaMuddeti',
  cetinlikDerecesi: 'cetinlikDerecesi',
  porsiyaSayi: 'porsiyaSayi',
  tarixiMelumat: 'tarixiMelumat',
  teqdimTeklifleri: 'teqdimTeklifleri',
  sekilLinki: 'sekilLinki',
  featured: 'featured',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Recipe: 'Recipe'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\alien\\Desktop\\Me\\İla\\chef-ilhama-new\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\alien\\Desktop\\Me\\İla\\chef-ilhama-new\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Chef İlhamə Database Schema\n// Prisma schema for Azerbaijani recipe database - Based on CSV structure\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"POSTGRES_URL_NON_POOLING\")\n}\n\n// Recipe model - main recipes table based on CSV structure\nmodel Recipe {\n  id                String   @id @default(cuid())\n  yemeyinAdi        String // Yeməyin Adı (Recipe Name)\n  slug              String   @unique // URL-friendly version\n  mense             String? // Mənşə (Origin)\n  bolge             String? // Bölgə (Region) \n  kateqoriya        String // Kateqoriya (Category)\n  terkibHisseleri   String   @db.Text // Tərkib hissələri (Ingredients)\n  hazirlanmaQaydasi String   @db.Text // Hazırlanma qaydası (Instructions)\n  hazirlanmaMuddeti String // Hazırlanma müddəti (Prep Time)\n  cetinlikDerecesi  String // Çətinlik dərəcəsi (Difficulty)\n  porsiyaSayi       String // Porsiya sayı (Servings)\n  tarixiMelumat     String   @db.Text // Tarixi məlumat/Arxa plan (History/Background)\n  teqdimTeklifleri  String   @db.Text // Təqdim təklifləri (Serving Suggestions)\n  sekilLinki        String // Şəkil Linki (Image Link)\n  featured          Boolean  @default(false)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  @@map(\"recipes\")\n}\n",
  "inlineSchemaHash": "8c37576124eb9fe2f2e1e8b2e018d80faffc4513aa4650a0be922fb211a8086a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Recipe\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yemeyinAdi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mense\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bolge\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kateqoriya\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terkibHisseleri\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hazirlanmaQaydasi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hazirlanmaMuddeti\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cetinlikDerecesi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"porsiyaSayi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tarixiMelumat\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teqdimTeklifleri\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sekilLinki\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"recipes\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

